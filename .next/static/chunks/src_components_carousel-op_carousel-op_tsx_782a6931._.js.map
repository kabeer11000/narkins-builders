{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/work/Narkins%20code/src/components/carousel-op/carousel-op.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nexport function Carousel({\r\n    dataSource = [],\r\n    swipe = true,\r\n    hideArrows = false,\r\n    autoPlay = true,\r\n    slideShow = true,\r\n    loop = true,\r\n    rightToLeft = false,\r\n    hideIndicators = false,\r\n    interval = 10000, isNotRounded = false, onChange = (newIndex: number) => { }\r\n}) {\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [touchStart, setTouchStart] = useState(0);\r\n    const [touchEnd, setTouchEnd] = useState(0);\r\n    const timeoutRef = useRef(null);\r\n    useEffect(() => {\r\n        onChange(currentIndex);\r\n    }, [currentIndex])\r\n    useEffect(() => {\r\n        if (autoPlay) {\r\n            startSlideShow();\r\n        }\r\n        return () => {\r\n            if (timeoutRef.current) {\r\n                clearTimeout(timeoutRef.current);\r\n            }\r\n        };\r\n    }, [currentIndex, autoPlay, slideShow, interval]);\r\n\r\n    const startSlideShow = () => {\r\n        stopSlideShow();\r\n        timeoutRef.current = setTimeout(() => {\r\n            updateIndex(currentIndex + (rightToLeft ? -1 : 1));\r\n        }, interval);\r\n    };\r\n\r\n    const stopSlideShow = () => {\r\n        if (timeoutRef.current) {\r\n            clearTimeout(timeoutRef.current);\r\n        }\r\n    };\r\n\r\n    const updateIndex = (newIndex) => {\r\n        if (newIndex < 0) {\r\n            newIndex = loop ? dataSource.length - 1 : 0;\r\n        } else if (newIndex >= dataSource.length) {\r\n            newIndex = loop ? 0 : dataSource.length - 1;\r\n        }\r\n        setCurrentIndex(newIndex);\r\n    };\r\n\r\n    const handleTouchStart = (e) => {\r\n        setTouchStart(e.targetTouches[0].clientX);\r\n    };\r\n\r\n    const handleTouchMove = (e) => {\r\n        setTouchEnd(e.targetTouches[0].clientX);\r\n    };\r\n\r\n    const handleTouchEnd = () => {\r\n        if (swipe) {\r\n            if (touchStart - touchEnd > 75) {\r\n                updateIndex(currentIndex + 1);\r\n            }\r\n            if (touchStart - touchEnd < -75) {\r\n                updateIndex(currentIndex - 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={`relative w-full overflow-hidden z-[0] h-full ${!isNotRounded ? \"rounded-xl\" : \"\"}`}>\r\n            <div\r\n                className=\"flex transition-transform duration-500 ease-in-out h-full\"\r\n                style={{ transform: `translateX(-${currentIndex * 100}%)` }}\r\n                onTouchStart={handleTouchStart}\r\n                onTouchMove={handleTouchMove}\r\n                onTouchEnd={handleTouchEnd}\r\n            >\r\n                {dataSource.map((item, index) => (\r\n                    <div key={index} className=\"flex-none w-full h-full flex items-center justify-center\">\r\n                        <img src={item.image} loading={index === 0 ? \"eager\" : \"lazy\"} alt={`Slide ${index}`} style={{ objectFit: 'cover', flex: 1 }} className=\"w-full h-full\" />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {!hideArrows && (\r\n                <React.Fragment>\r\n                    <button onClick={() => updateIndex(currentIndex - 1)}\r\n                        className=\"absolute px-4 left-0 top-1/2 transform -translate-y-1/2 group\"\r\n                        data-testid=\"carousel-left-control\"\r\n                        type=\"button\"\r\n                        aria-label=\"Previous slide\"\r\n                    >\r\n                        <span className=\"inline-flex h-8 w-8 items-center justify-center rounded-full bg-white/30 group-hover:bg-white/50 group-focus:outline-none group-focus:ring-4 group-focus:ring-white sm:h-10 sm:w-10\">\r\n                            <svg\r\n                                stroke=\"currentColor\"\r\n                                fill=\"none\"\r\n                                strokeWidth={2}\r\n                                viewBox=\"0 0 24 24\"\r\n                                aria-hidden=\"true\"\r\n                                className=\"h-5 w-5 text-white sm:h-6 sm:w-6\"\r\n                                height=\"1em\"\r\n                                width=\"1em\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 19l-7-7 7-7\" />\r\n                            </svg>\r\n                        </span>\r\n                    </button>\r\n                    <button onClick={() => updateIndex(currentIndex + 1)}\r\n                        className=\"group px-4 absolute right-0 top-1/2 transform -translate-y-1/2 \"\r\n                        data-testid=\"carousel-right-control\"\r\n                        type=\"button\"\r\n                        aria-label=\"Next slide\"\r\n                    >\r\n                        <span className=\"inline-flex h-8 w-8 items-center justify-center rounded-full bg-white/30 group-hover:bg-white/50 group-focus:outline-none group-focus:ring-4 group-focus:ring-white sm:h-10 sm:w-10\">\r\n                            <svg\r\n                                stroke=\"currentColor\"\r\n                                fill=\"none\"\r\n                                strokeWidth={2}\r\n                                viewBox=\"0 0 24 24\"\r\n                                aria-hidden=\"true\"\r\n                                className=\"h-5 w-5 text-white sm:h-6 sm:w-6\"\r\n                                height=\"1em\"\r\n                                width=\"1em\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 5l7 7-7 7\" />\r\n                            </svg>\r\n                        </span>\r\n                    </button>\r\n                </React.Fragment>\r\n            )}\r\n            {!hideIndicators && (\r\n                <div className=\"absolute bottom-0 left-1/2 transform -translate-x-1/2 py-4 flex\">\r\n                    {dataSource.map((_, idx) => (\r\n                        <button\r\n                            key={idx}\r\n                            onClick={() => updateIndex(idx)}\r\n                            className={`h-2 w-2 rounded-full mx-2 ${idx === currentIndex ? 'bg-yellow-700' : 'bg-white'}`}\r\n                        ></button>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Carousel;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}